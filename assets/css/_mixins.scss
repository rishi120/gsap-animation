//media-query

@mixin max($args) {
    @media screen and (max-width: $args) {
        @content;
    }
}

@mixin min($args) {
    @media screen and (min-width: $args) {
        @content;
    }
}


@mixin mq($args...) {
    @if length($args)==1 {
        @media screen and (max-width: nth($args, 1)) {
            @content;
        }
    }

    @if length($args)==2 {
        @media screen and (max-width: nth($args, 1)) and (min-width: nth($args, 2)) {
            @content;
        }
    }
}

@mixin bp($point) {
    @if $point==papa-bear {
        @media (max-width: 1600px) {
            @content;
        }
    }

    @else if $point==mama-bear {
        @media (max-width: 1250px) {
            @content;
        }
    }

    @else if $point==baby-bear {
        @media (max-width: 600px) {
            @content;
        }
    }
}






// linear-gradient
// --------------------------------------------------
@mixin linear-gradient($direction, $color-stops...) {
    background: nth(nth($color-stops, 1), 1);
    background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
    background: linear-gradient($direction, $color-stops);
}


// background-position
// --------------------------------------------------
@mixin background-position($position) {
    -webkit-background-position: $position;
    -moz-background-position: $position;
    background-position: $position;
}

// filter
// --------------------------------------------------
@mixin filter($deg) {
    -ms-filter: $deg;
    filter: $deg;
}

// Placeholder text
// --------------------------------------------------
@mixin placeholder($whitcol: $input-color-placeholder, $text-indent: 0) {
    &::-moz-placeholder {
        /* Firefox 19+ */
        color: $whitcol;
    }

    &:-ms-input-placeholder {
        color: $whitcol;
    }

    &::-webkit-input-placeholder {
        color: $whitcol;
        // Safari placeholder margin issue
        text-indent: $text-indent;
    }
}

// Appearance
// --------------------------------------------------
@mixin appearance($val) {
    -webkit-appearance: $val;
    -moz-appearance: $val;
    appearance: $val;
}

// Border Radius Mixins
// --------------------------------------------------
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}

// Single Corner Border Radius
@mixin border-top-left-radius($radius) {
    -webkit-border-top-left-radius: $radius;
    -moz-border-radius-topleft: $radius;
    border-top-left-radius: $radius;
}

@mixin border-top-right-radius($radius) {
    -webkit-border-top-right-radius: $radius;
    -moz-border-radius-topright: $radius;
    border-top-right-radius: $radius;
}

@mixin border-bottom-right-radius($radius) {
    -webkit-border-bottom-right-radius: $radius;
    -moz-border-radius-bottomright: $radius;
    border-bottom-right-radius: $radius;
}

@mixin border-bottom-left-radius($radius) {
    -webkit-border-bottom-left-radius: $radius;
    -moz-border-radius-bottomleft: $radius;
    border-bottom-left-radius: $radius;
}

// Single Side Border Radius
@mixin border-top-radius($radius) {
    @include border-top-right-radius($radius);
    @include border-top-left-radius($radius);
}

@mixin border-right-radius($radius) {
    @include border-top-right-radius($radius);
    @include border-bottom-right-radius($radius);
}

@mixin border-bottom-radius($radius) {
    @include border-bottom-right-radius($radius);
    @include border-bottom-left-radius($radius);
}

@mixin border-left-radius($radius) {
    @include border-top-left-radius($radius);
    @include border-bottom-left-radius($radius);
}

// Box shadows
// --------------------------------------------------
@mixin box-shadow($shadow...) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    box-shadow: $shadow;
}

// Transition Mixins
// --------------------------------------------------
@mixin transition($transition...) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    transition: $transition;
}

@mixin transition-delay($transition-delay) {
    -webkit-transition-delay: $transition-delay;
    -moz-transition-delay: $transition-delay;
    transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration) {
    -webkit-transition-duration: $transition-duration;
    -moz-transition-duration: $transition-duration;
    transition-duration: $transition-duration;
}

@mixin transition-timing-function($transition-timing) {
    -webkit-transition-timing-function: $transition-timing;
    -moz-transition-timing-function: $transition-timing;
    transition-timing-function: $transition-timing;
}

@mixin transition-property($property) {
    -webkit-transition-property: $property;
    -moz-transition-property: $property;
    transition-property: $property;
}

@mixin transition-transform($properties...) {
    // special case cuz of transform vendor prefixes
    -webkit-transition: -webkit-transform $properties;
    -moz-transition: -moz-transform $properties;
    transition: transform $properties;
}

// Animation Mixins
// --------------------------------------------------
@mixin animation($animation) {
    -webkit-animation: $animation;
    -moz-animation: $animation;
    animation: $animation;
}

@mixin animation-duration($duration) {
    -webkit-animation-duration: $duration;
    -moz-animation-duration: $duration;
    animation-duration: $duration;
}

@mixin animation-direction($direction) {
    -webkit-animation-direction: $direction;
    -moz-animation-direction: $direction;
    animation-direction: $direction;
}

@mixin animation-timing-function($animation-timing) {
    -webkit-animation-timing-function: $animation-timing;
    -moz-animation-timing-function: $animation-timing;
    animation-timing-function: $animation-timing;
}

@mixin animation-fill-mode($fill-mode) {
    -webkit-animation-fill-mode: $fill-mode;
    -moz-animation-fill-mode: $fill-mode;
    animation-fill-mode: $fill-mode;
}

@mixin animation-name($name) {
    -webkit-animation-name: $name;
    -moz-animation-name: $name;
    animation-name: $name;
}

@mixin animation-iteration-count($count) {
    -webkit-animation-iteration-count: $count;
    -moz-animation-iteration-count: $count;
    animation-iteration-count: $count;
}

// Transformation Mixins
// --------------------------------------------------
@mixin rotate($degrees) {
    @include transform(rotate($degrees));
}

@mixin scale($x, $y) {
    @include transform(scale($x, $y));
}

@mixin translate($x, $y) {
    @include transform(translate($x, $y));
}

@mixin skew($x, $y) {
    @include transform(skew($x, $y));
    -webkit-backface-visibility: hidden;
}

@mixin translate3d($x, $y, $z) {
    @include transform(translate3d($x, $y, $z));
}

@mixin translateZ($z) {
    @include transform(translateZ($z));
}

@mixin transform($val) {
    -webkit-transform: $val;
    -moz-transform: $val;
    transform: $val;
}

@mixin transform-origin($left, $top) {
    -webkit-transform-origin: $left $top;
    -moz-transform-origin: $left $top;
    transform-origin: $left $top;
}

// Backface visibility
// --------------------------------------------------
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
@mixin backface-visibility($visibility) {
    -webkit-backface-visibility: $visibility;
    backface-visibility: $visibility;
}

// Background clipping
// --------------------------------------------------
@mixin background-clip($clip) {
    -webkit-background-clip: $clip;
    -moz-background-clip: $clip;
    background-clip: $clip;
}

// Background sizing
// --------------------------------------------------
@mixin background-size($size) {
    -webkit-background-size: $size;
    -moz-background-size: $size;
    background-size: $size;
}

// Box sizing
// --------------------------------------------------
@mixin box-sizing($boxmodel) {
    -webkit-box-sizing: $boxmodel;
    -moz-box-sizing: $boxmodel;
    box-sizing: $boxmodel;
}

// User select
// --------------------------------------------------
@mixin user-select($select) {
    -webkit-user-select: $select;
    -moz-user-select: $select;
    -ms-user-select: $select;
    user-select: $select;
}

// Content Columns
// --------------------------------------------------
@mixin content-columns($columnCount, $columnGap: $grid-gutter-width) {
    -webkit-column-count: $columnCount;
    -moz-column-count: $columnCount;
    column-count: $columnCount;
    -webkit-column-gap: $columnGap;
    -moz-column-gap: $columnGap;
    column-gap: $columnGap;
}

// Media Query
// --------------------------------------------------
// @mixin sm {
//   @media (max-width: #{$sm - 1px}) {
//     @content;
//   }
// }

// @mixin md {
//   @media (min-width: #{$sm}) and (max-width: #{$md - 1px}) {
//     @content;
//   }
// }

// @mixin lg {
//   @media (min-width: #{$md}) and (max-width: #{$lg - 1px}) {
//     @content;
//   }
// }
// @mixin lgb {
//   @media (min-width: #{$lg}) and (max-width: #{$lg1 - 1px}) {
//     @content;
//   }
// }

// @mixin xl {
//   @media (min-width: #{$lg1}) and (max-width: #{$xl - 1px}) {
//     @content;
//   }
// }






// Animate
// --------------------------------------------------
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }

    @-moz-keyframes #{$animation-name} {
        @content;
    }

    @-ms-keyframes #{$animation-name} {
        @content;
    }

    @-o-keyframes #{$animation-name} {
        @content;
    }

    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -ms-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str};
}